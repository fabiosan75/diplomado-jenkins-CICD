pipeline {
  environment {
        DOCKER_IMAGE = "diplomado_jenkins_cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
        DOCKER_CREDENTIALS_ID = 'docker-cred'
  }

  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    // stage('Clean Workspace') {
    //    steps {
    //     sh 'chown -R jenkins:jenkins /var/lib/jenkins/workspace/Diplomado-Arquitectura-Actividad-3'
    //     // deleteDir()
    //    }
    // }
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: ''
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://139.59.138.21:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build Docker Image') {

      steps {
        script {
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            // def dockerImage = docker.image("${DOCKER_IMAGE}")
            // docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            //     dockerImage.push()
            // }
        }
      }
    }
    stage('Push Docker Image'){
        steps {
          script {
             withDockerRegistry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/') {
     sh "docker push ${DOCKER_IMAGE}"
 }
            // Use Jenkins credentials for Docker Hub login
          //     withCredentials([
          //         usernamePassword(
          //           credentialsId: 'DOCKER_CREDENTIALS_ID', 
          //           usernameVariable: 'DOCKER_USERNAME', 
          //           passwordVariable: 'DOCKER_PASSWORD'
          //         )
          //       ]) {
          //       sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
  
          //     // Push the image
          //     sh "docker push ${DOCKER_IMAGE}"
          // }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "diplomado-jenkins-CICD"
            GIT_USER_NAME = "fabiosan75"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "fabiosan75@gmail.com"
                    git config user.name "fabiosan75"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
